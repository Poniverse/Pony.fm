<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\AlbumsController
 */
class AlbumsControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function get_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $album = \App\Models\Album::factory()->create();
        $album = \App\Models\Album::factory()->create();

        $response = $this->get('a{id}/dl.{extension}');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('albums');

        $response->assertOk();
        $response->assertViewIs('albums.index');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_shortlink_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $album = \App\Models\Album::factory()->create();

        $response = $this->get('a{id}');

        $response->assertRedirect(action('AlbumsController@getShow', [$id, $album->slug]));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $album = \App\Models\Album::factory()->create();
        $album = \App\Models\Album::factory()->create();

        $response = $this->get('albums/{id}-{slug}');

        $response->assertRedirect(action('AlbumsController@getAlbum', [$id, $album->slug]));

        // TODO: perform additional assertions
    }

    // test cases...
}
