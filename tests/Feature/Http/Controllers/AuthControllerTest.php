<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\AuthController
 */
class AuthControllerTest extends TestCase
{
    /**
     * @test
     */
    public function get_login_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('login');

        $response->assertRedirect($this->poniverse->getOAuthProvider(['redirectUri' => action('AuthController@getOAuth')])->getAuthorizationUrl());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_o_auth_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('auth/oauth');

        $response->assertRedirect(to('/'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function post_logout_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('auth/logout', [
            // TODO: send request data
        ]);

        $response->assertRedirect(to('/'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function post_poniverse_account_sync_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('auth/poniverse-sync', [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
